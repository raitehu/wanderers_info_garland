version: 0.2

env:
  variables:
    ENV: ENV
    REGION: ap-northeast-1
    ACCOUNT: 559300055890
    LOG_GROUP: LOG_GROUP
    TABLE_NAME: TABLE_NAME
    ACCESS_KEY_ID_ARN: ACCESS_KEY_ID_ARN
    SECRET_ACCESS_KEY_ARN: SECRET_ACCESS_KEY_ARN
    TASK_ROLE_ARN: TASK_ROLE_ARN
    TASK_EXECUTION_ROLE_ARN: TASK_EXECUTION_ROLE_ARN
  parameter-store:
    DOCKER_USER: dockerhub-user
    DOCKER_TOKEN: dockerhub-token

phases:
  pre_build:
    on-failure: ABORT
    commands:
      - export SERVICE_NAME=$ENV-garland
      - export TASK_FAMILY=$SERVICE_NAME
      - export CONTAINER_NAME=$SERVICE_NAME
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT.dkr.ecr.$REGION.amazonaws.com
      - echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
  build:
    on-failure: ABORT
    commands:
      - docker build --platform linux/amd64 -t $SERVICE_NAME .
      - docker tag $SERVICE_NAME:latest $ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$SERVICE_NAME:latest
      - docker push $ACCOUNT.dkr.ecr.$REGION.amazonaws.com/$SERVICE_NAME:latest
  post_build:
    commands:
      - envsubst < taskdef_template.json > taskdef.json
      - envsubst < appspec_template.yml > appspec.yml
      - printf '{"Version":"1.0","ImageURI":"%s"}' $SERVICE_NAME:latest > imageDetail.json

artifacts:
  files:
    - taskdef.json
    - appspec.yml
    - imageDetail.json
